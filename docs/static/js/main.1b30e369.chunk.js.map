{"version":3,"sources":["components/Customer/UpdateCustomer.module.css","components/Modal/Modal.module.css","components/UI/DropDownMenu.module.css","components/Customer/CustomerDisplay.module.css","components/UI/Button.module.css","components/UI/Header.module.css","components/UI/PageButtons.module.css","components/Modal/Overlay.module.css","components/UI/Button.js","components/Modal/Overlay.js","components/Modal/ErrorModal.js","components/Customer/AddCustomer.js","components/Customer/CustomerDisplay.js","components/Customer/UpdateCustomer.js","components/UI/DropdownMenu.js","components/Modal/DeleteUserModal.js","components/Customer/CustomerRow.js","components/Customer/CustomerTable.js","components/UI/Header.js","components/UI/PageButtons.js","App.js","reportWebVitals.js","index.js","components/Customer/AddCustomer.module.css","components/Customer/CustomerTable.module.css"],"names":["module","exports","Button","props","onClick","clickHandler","className","styles","button","additionalClass","buttonText","Overlay","overlay","onClose","ErrorModal","message","errorMessage","AddCustomer","useState","enteredFirstName","setFirstName","enteredLastName","setLastName","enteredPhone","setPhone","enteredEmail","setEmail","addCustomerSuccess","setCustomerSuccess","isRequired","setIsRequired","error","setError","a","customer","id","firstName","trim","lastName","email","phone","fetch","method","body","JSON","stringify","headers","response","ok","status","json","includes","Error","data","onAddCustomer","removeSuccessMessage","resetInputs","setTimeout","destination","document","getElementById","createPortal","onSubmit","event","preventDefault","addCustomer","text","name","type","value","onChange","target","to","CustomerDisplay","UpdateCustomer","updateErrorMessage","setUpdateErrorMessage","onUpdateCustomer","closeUpdateMenu","placeholder","updateCustomer","DropdownMenu","useEffect","showMenu","addEventListener","onShowMenu","removeEventListener","href","onEdit","onDelete","DeleteUserModal","onCancel","CustomerRow","setCustomer","setShowMenu","setUpdateCustomer","showDeleteCustomerModal","setDeleteCustomerModal","onUpdate","disableBodyScroll","enableBodyScroll","CustomerTable","page","newPage","displayList","slice","length","lowerIndex","customersOnPage","onLastPage","onDeleteHandler","tableIndex","list","map","onSearch","hide","Header","header","title","PageButtons","onFirstPage","undefined","onPreviousPage","currentPageNumber","onNextPage","disableNextButtons","App","customerList","setCustomerList","isLoading","setIsLoading","getError","setGetError","deleteError","setDeleteError","search","setSearch","setDisplayList","setLowerIndex","setCurrentPageNumber","numberOfPages","setNumberOfPages","deletedCustomer","deleteCustomerFromList","openDeleteModal","prevState","filter","lastPageHandler","fetchCustomersHandler","newDisplayList","toLowerCase","Math","ceil","calcNumberOfPages","switchLists","customersNotFound","path","newArrayState","exact","low","high","mid","floor","newCustomerArray","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1b30e369.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table-cell\":\"UpdateCustomer_table-cell__xamcF\",\"update-input\":\"UpdateCustomer_update-input__1GxEm\",\"table-cell-buttons\":\"UpdateCustomer_table-cell-buttons__L8d4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button-container\":\"Modal_button-container__1jPG1\",\"modal-box\":\"Modal_modal-box__hlyrp\",\"message\":\"Modal_message__2mrm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdownmenu-button\":\"DropDownMenu_dropdownmenu-button__1qJIg\",\"dropdownmenu-button--active\":\"DropDownMenu_dropdownmenu-button--active__3nU6h\",\"dropdownmenu-box\":\"DropDownMenu_dropdownmenu-box__2OWa3\",\"dropdownmenu-link\":\"DropDownMenu_dropdownmenu-link__2IA6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table-cell\":\"CustomerDisplay_table-cell__2MKql\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__17rWu\",\"save-customer-button\":\"Button_save-customer-button__nRNjZ\",\"save-update-button\":\"Button_save-update-button__3b4bI\",\"cancel-update-button\":\"Button_cancel-update-button__38PG_\",\"disabled\":\"Button_disabled__8H72j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__16PFf\",\"title\":\"Header_title__1LevX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons-container\":\"PageButtons_buttons-container__2YjSa\",\"page-number\":\"PageButtons_page-number__3Bmsj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__3jeSK\"};","import styles from './Button.module.css';\r\n\r\nfunction Button(props){\r\n    return <button onClick={props.clickHandler} className={`${styles.button} ${styles[props.additionalClass]}`}>{props.buttonText}</button>\r\n}\r\n\r\nexport default Button;","import styles from \"./Overlay.module.css\";\r\n\r\nfunction Overlay(props) {\r\n  return <div className={styles.overlay} onClick={props.onClose}></div>;\r\n}\r\n\r\nexport default Overlay;\r\n","import { Fragment } from \"react\";\r\nimport Overlay from \"./Overlay\";\r\nimport styles from \"./Modal.module.css\";\r\nimport Button from \"../UI/Button\";\r\nfunction ErrorModal(props){\r\n return   <Fragment>\r\n<Overlay></Overlay>\r\n<div className={styles['modal-box']}>\r\n        <h3 className={styles.message}>{props.errorMessage}</h3>\r\n        <div className={styles[\"button-container\"]}>\r\n          <Button buttonText=\" Ok\"  clickHandler={props.onClose} >\r\n          </Button>\r\n        </div>\r\n      </div>\r\n</Fragment>\r\n}\r\n\r\nexport default ErrorModal;","import { Fragment, useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport styles from \"./AddCustomer.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../UI/Button\";\r\nimport ErrorModal from \"../Modal/ErrorModal\";\r\nfunction AddCustomer(props) {\r\n  const [enteredFirstName, setFirstName] = useState(\"\");\r\n  const [enteredLastName, setLastName] = useState(\"\");\r\n  const [enteredPhone, setPhone] = useState(\"\");\r\n  const [enteredEmail, setEmail] = useState(\"\");\r\n  const [addCustomerSuccess, setCustomerSuccess] = useState(false);\r\n  const [isRequired, setIsRequired] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  function addCustomerHandler(event) {\r\n    event.preventDefault();\r\n    if (enteredEmail.trim() === \"\") {\r\n      setIsRequired(true);\r\n    } else {\r\n      setIsRequired(false);\r\n      addCustomer();\r\n    }\r\n  }\r\n\r\n  async function addCustomer() {\r\n    setError(null);\r\n    const customer = {\r\n      id: 0,\r\n      firstName: enteredFirstName.trim(),\r\n      lastName: enteredLastName.trim(),\r\n      email: enteredEmail.trim(),\r\n      phone: enteredPhone.trim(),\r\n    };\r\n    try {\r\n      const response = await fetch(\"https://mymemetestpage.link/customers\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(customer),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        let errorMessage = \"Something went wrong\";\r\n        if (response.status !== 500) {\r\n          const data = await response.json();\r\n          if (data.message.includes(\"unique_email\")) {\r\n            errorMessage = \"Email already exists\";\r\n          }\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n      const data = await response.json();\r\n      props.onAddCustomer(data);\r\n      setCustomerSuccess(true);\r\n      removeSuccessMessage();\r\n      resetInputs();\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  }\r\n  function resetInputs(){\r\n    setEmail(\"\");\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setPhone(\"\");\r\n  }\r\n  function removeSuccessMessage() {\r\n    setTimeout(() => {\r\n      setCustomerSuccess(false);\r\n    }, 1500);\r\n  }\r\n  function onChangeFirstNameHandler(event) {\r\n    setFirstName(event.target.value);\r\n  }\r\n  function onChangeLastNameHandler(event) {\r\n    setLastName(event.target.value);\r\n  }\r\n  function onChangePhoneHandler(event) {\r\n    setPhone(event.target.value);\r\n  }\r\n  function onChangeEmailHandler(event) {\r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  function closeErrorModal() {\r\n    setError(null);\r\n  }\r\n\r\n  const message= (addCustomerSuccess&& \"Customer added successfully!\")||(isRequired&&'Email is required.');\r\n  const destination = document.getElementById(\"modal-destination\");\r\n  return (\r\n    <Fragment>\r\n      {error &&\r\n        createPortal(\r\n          <ErrorModal\r\n            onClose={closeErrorModal}\r\n            errorMessage={error}\r\n          ></ErrorModal>,\r\n          destination\r\n        )}\r\n      <span className={styles[\"success-message\"]}>\r\n        {message}\r\n      </span>\r\n      <form className={styles[\"add-form\"]} onSubmit={addCustomerHandler}>\r\n        <div className={styles[\"form-group\"]}>\r\n          <h3 className={styles.text}>First Name:</h3>\r\n\r\n          <input\r\n            className={styles[\"add-input\"]}\r\n            name=\"firstName\"\r\n            type=\"text\"\r\n            value={enteredFirstName}\r\n            onChange={onChangeFirstNameHandler}\r\n          ></input>\r\n        </div>\r\n        <div className={styles[\"form-group\"]}>\r\n          <h3 className={styles.text}>Last Name:</h3>\r\n          <input\r\n            className={styles[\"add-input\"]}\r\n            name=\"lastName\"\r\n            type=\"text\"\r\n            value={enteredLastName}\r\n            onChange={onChangeLastNameHandler}\r\n          ></input>\r\n        </div>\r\n        <div className={styles[\"form-group\"]}>\r\n          <h3 className={styles.text}>Phone:</h3>\r\n          <input\r\n            className={styles[\"add-input\"]}\r\n            name=\"phone\"\r\n            type=\"text\"\r\n            value={enteredPhone}\r\n            onChange={onChangePhoneHandler}\r\n          ></input>\r\n        </div>\r\n        <div className={styles[\"form-group\"]}>\r\n          <h3 className={styles.text}>Email:</h3>\r\n          <input\r\n            className={`${styles[\"add-input\"]} ${\r\n              isRequired && styles[\"input-required\"]\r\n            }`}\r\n            name=\"email\"\r\n            type=\"text\"\r\n            value={enteredEmail}\r\n            onChange={onChangeEmailHandler}\r\n          ></input>\r\n        </div>\r\n        <div className={styles[\"button-container\"]}>\r\n          <Button\r\n            buttonText=\"Save\"\r\n            additionalClass=\"save-customer-button\"\r\n          ></Button>\r\n          <Link to=\"/\" className={styles[\"back-link\"]}>\r\n            Back\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default AddCustomer;\r\n","import { Fragment } from \"react\";\r\nimport styles from \"./CustomerDisplay.module.css\";\r\n\r\nfunction CustomerDisplay(props) {\r\n  return (\r\n    <Fragment>\r\n      <td className={styles[\"table-cell\"]}>\r\n        {props.customer.firstName + \"  \"}\r\n      </td>\r\n      <td className={styles[\"table-cell\"]}>{props.customer.lastName + \"  \"}</td>\r\n      <td className={styles[\"table-cell\"]}>{props.customer.email + \"  \"}</td>\r\n      <td className={styles[\"table-cell\"]}>{props.customer.phone + \"  \"}</td>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default CustomerDisplay;\r\n","import {useState, Fragment } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport ErrorModal from \"../Modal/ErrorModal\";\r\nimport styles from \"./UpdateCustomer.module.css\";\r\nimport Button from \"../UI/Button\";\r\nfunction UpdateCustomer(props) {\r\n  const [enteredFirstName, setFirstName] = useState(props.customer.firstName);\r\n  const [enteredLastName, setLastName] = useState(props.customer.lastName);\r\n  const [enteredPhone, setPhone] = useState(props.customer.phone);\r\n  const [enteredEmail, setEmail] = useState(props.customer.email);\r\n  const [updateErrorMessage,setUpdateErrorMessage]=useState(null);\r\n\r\n  function updateCustomerHandler(event){\r\n    event.preventDefault();\r\n    if (enteredEmail.trim() === \"\") {\r\n      setUpdateErrorMessage('Email is required');\r\n    } else {\r\n      updateCustomer();\r\n    }\r\n  }\r\n\r\n  async function updateCustomer() {\r\n    setUpdateErrorMessage(null);\r\n    const customer = {\r\n      id: props.customer.id,\r\n      firstName: enteredFirstName.trim(),\r\n      lastName: enteredLastName.trim(),\r\n      email: enteredEmail.trim(),\r\n      phone: enteredPhone.trim(),\r\n    };\r\n   \r\n    try {\r\n      const response = await fetch(\"https://mymemetestpage.link/customers\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(customer),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (!response.ok) {\r\n        let errorMessage = \"Something went wrong\";\r\n        if (response.status !== 500) {\r\n          const data = await response.json();\r\n          if (data.message.includes(\"unique_email\")) {\r\n            errorMessage = \"Email already exists\";\r\n          }\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n      props.onUpdateCustomer(customer);\r\n      props.closeUpdateMenu();\r\n    } catch (error) {\r\n      setUpdateErrorMessage(error.message);\r\n    }\r\n  }\r\n\r\n  \r\n  function onChangeFirstNameHandler(event) {\r\n    setFirstName(event.target.value);\r\n  }\r\n  function onChangeLastNameHandler(event) {\r\n    setLastName(event.target.value);\r\n  }\r\n  function onChangePhoneHandler(event) {\r\n    setPhone(event.target.value);\r\n  }\r\n  function onChangeEmailHandler(event) {\r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  function updateModalHandler() {\r\n    setUpdateErrorMessage(null);\r\n  }\r\n  const destination = document.getElementById(\"modal-destination\");\r\n  return (\r\n    <Fragment>\r\n      {updateErrorMessage &&\r\n        createPortal(\r\n          <ErrorModal onClose={updateModalHandler} errorMessage={updateErrorMessage}></ErrorModal>,\r\n          destination\r\n        )}\r\n      <td className={styles[\"table-cell\"]}>\r\n        <input\r\n          className={styles[\"update-input\"]}\r\n          name=\"firstName\"\r\n          type=\"text\"\r\n          placeholder=\"First name\"\r\n          value={enteredFirstName}\r\n          onChange={onChangeFirstNameHandler}\r\n        ></input>\r\n      </td>\r\n      <td className={styles[\"table-cell\"]}>\r\n        <input\r\n          className={styles[\"update-input\"]}\r\n          name=\"lastName\"\r\n          type=\"text\"\r\n          placeholder=\"Last name\"\r\n          value={enteredLastName}\r\n          onChange={onChangeLastNameHandler}\r\n        ></input>\r\n      </td>\r\n      <td className={styles[\"table-cell\"]}>\r\n        <input\r\n          className={styles[\"update-input\"]}\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email adress\"\r\n          value={enteredEmail}\r\n          onChange={onChangeEmailHandler}\r\n        ></input>\r\n      </td>\r\n      <td className={styles[\"table-cell\"]}>\r\n        <input\r\n          className={styles[\"update-input\"]}\r\n          name=\"phone\"\r\n          type=\"text\"\r\n          placeholder=\"Phone number\"\r\n          value={enteredPhone}\r\n          onChange={onChangePhoneHandler}\r\n        ></input>\r\n      </td>\r\n\r\n      <td className={styles[\"table-cell-buttons\"]}>\r\n        <Button\r\n          buttonText=\"Save\"\r\n          additionalClass=\"save-update-button\"\r\n          clickHandler={updateCustomerHandler}\r\n        ></Button>\r\n        <Button\r\n          buttonText=\"Cancel\"\r\n          additionalClass=\"cancel-update-button\"\r\n          clickHandler={props.closeUpdateMenu}\r\n        ></Button>\r\n      </td>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default UpdateCustomer;\r\n","import { useEffect } from \"react\";\r\nimport styles from \"./DropDownMenu.module.css\";\r\n\r\nfunction DropdownMenu(props) {\r\n  useEffect(() => {\r\n    if (props.showMenu) {\r\n      document.addEventListener(\"click\", props.onShowMenu);\r\n    }\r\n    return () => {\r\n      document.removeEventListener(\"click\", props.onShowMenu);\r\n    };\r\n  }, [props.showMenu]);\r\n\r\n  return (\r\n    <td>\r\n      <button\r\n        className={\r\n          props.showMenu\r\n            ? styles[\"dropdownmenu-button--active\"]\r\n            : styles[\"dropdownmenu-button\"]\r\n        }\r\n        onClick={props.onShowMenu}\r\n      >\r\n        <ion-icon name=\"caret-back-outline\"></ion-icon>\r\n      </button>\r\n      {props.showMenu ? (\r\n        <nav className={styles[\"dropdownmenu-box\"]}>\r\n          <a\r\n            className={styles[\"dropdownmenu-link\"]}\r\n            href=\"#\"\r\n            onClick={props.onEdit}\r\n          >\r\n            Edit\r\n          </a>\r\n\r\n          <a\r\n            className={styles[\"dropdownmenu-link\"]}\r\n            href=\"#\"\r\n            onClick={props.onDelete}\r\n          >\r\n            Delete\r\n          </a>\r\n        </nav>\r\n      ) : null}\r\n    </td>\r\n  );\r\n}\r\n\r\nexport default DropdownMenu;\r\n","import { Fragment } from \"react\";\r\nimport styles from \"./Modal.module.css\";\r\nimport Overlay from \"./Overlay\";\r\nimport Button from \"../UI/Button\";\r\nfunction DeleteUserModal(props) {\r\n  return (\r\n    <Fragment>\r\n      <Overlay onClose={props.onCancel}></Overlay>\r\n      <div className={styles['modal-box']}>\r\n        <p>Do you really want to delete the customer?</p>\r\n        <div className={styles[\"button-container\"]}>\r\n          <Button buttonText=\"Yes\" additionalClass=\"page-button\" clickHandler={props.onDelete}>\r\n            \r\n          </Button>\r\n          <Button buttonText=\"No\" additionalClass=\"page-button\" clickHandler={props.onCancel}>\r\n            \r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default DeleteUserModal;\r\n","import { Fragment, useState } from \"react\";\r\nimport CustomerDisplay from \"./CustomerDisplay\";\r\nimport UpdateCustomer from \"./UpdateCustomer\";\r\nimport DropdownMenu from \"../UI/DropdownMenu\";\r\nimport DeleteUserModal from \"../Modal/DeleteUserModal\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { enableBodyScroll, disableBodyScroll } from \"body-scroll-lock\";\r\n\r\nfunction CustomerRow(props) {\r\n  const [customer, setCustomer] = useState(props.customer);\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const [updateCustomer, setUpdateCustomer] = useState(false);\r\n  const [showDeleteCustomerModal, setDeleteCustomerModal] = useState(false);\r\n\r\n  function dropdownMenuHandler() {\r\n    setShowMenu(showMenu ? false : true);\r\n  }\r\n\r\n  function openUpdateMenuHandler(event) {\r\n    event.preventDefault();\r\n    setUpdateCustomer(true);\r\n  }\r\n\r\n  function closeUpdateMenuHandler() {\r\n    setUpdateCustomer(false);\r\n  }\r\n\r\n  function updateCustomerHandler(customer) {\r\n    setCustomer(customer);\r\n    props.onUpdate(customer);\r\n  }\r\n\r\n  function openDeleteCustomerModal(event) {\r\n    event.preventDefault();\r\n    setDeleteCustomerModal(true);\r\n    disableBodyScroll(document);\r\n  }\r\n\r\n  function deleteCustomerHandler() {\r\n    setDeleteCustomerModal(false);\r\n    props.onDelete(customer);\r\n    enableBodyScroll(document);\r\n  }\r\n\r\n  function cancelDeleteCustomer() {\r\n    setDeleteCustomerModal(false);\r\n    enableBodyScroll(document);\r\n  }\r\n\r\n  const destination = document.getElementById(\"modal-destination\");\r\n\r\n  return (\r\n    <Fragment>\r\n      {updateCustomer ? (\r\n        <UpdateCustomer\r\n          onUpdateCustomer={updateCustomerHandler}\r\n          closeUpdateMenu={closeUpdateMenuHandler}\r\n          customer={customer}\r\n        ></UpdateCustomer>\r\n      ) : (\r\n        <Fragment>\r\n          <CustomerDisplay customer={customer}></CustomerDisplay>\r\n          <DropdownMenu\r\n            showMenu={showMenu}\r\n            onShowMenu={dropdownMenuHandler}\r\n            onEdit={openUpdateMenuHandler}\r\n            onDelete={openDeleteCustomerModal}\r\n          ></DropdownMenu>\r\n        </Fragment>\r\n      )}\r\n\r\n      {showDeleteCustomerModal &&\r\n        createPortal(\r\n          <DeleteUserModal\r\n            onDelete={deleteCustomerHandler}\r\n            onCancel={cancelDeleteCustomer}\r\n          ></DeleteUserModal>,\r\n          destination\r\n        )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default CustomerRow;\r\n","import CustomerRow from \"./CustomerRow\";\r\nimport styles from \"./CustomerTable.module.css\";\r\n\r\nfunction CustomerTable(props) {\r\n  const page = (function () {\r\n    const newPage = props.displayList.slice(\r\n      props.displayList.length - props.lowerIndex < props.customersOnPage\r\n        ? props.lowerIndex\r\n        : props.lowerIndex,\r\n      props.lowerIndex + props.customersOnPage\r\n    );\r\n    if (newPage.length === 0) {\r\n      props.onLastPage();\r\n    }\r\n    return newPage;\r\n  })();\r\n\r\n  function onDeleteHandler(customer) {\r\n    props.onDelete(customer);\r\n  }\r\n  let tableIndex = props.lowerIndex;\r\n  const list = page.map((customer) => {\r\n    return (\r\n      <tr className={styles[\"table-row\"]} key={customer.id}>\r\n        <td>{++tableIndex}</td>\r\n        <CustomerRow\r\n          customer={customer}\r\n          onDelete={onDeleteHandler}\r\n          onUpdate={props.onUpdate}\r\n        ></CustomerRow>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <table\r\n      className={`${styles[\"customer-table\"]} ${props.onSearch && styles.hide}`}\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th\r\n            className={`${styles[\"table-header\"]} ${styles[\"table-header--number\"]}`}\r\n          >\r\n            №\r\n          </th>\r\n          <th className={styles[\"table-header\"]}>First name</th>\r\n          <th className={styles[\"table-header\"]}>Last name</th>\r\n          <th className={styles[\"table-header\"]}>Email</th>\r\n          <th className={styles[\"table-header\"]}>Phone</th>\r\n          <th\r\n            className={`${styles[\"table-header\"]} ${styles[\"table-header--action\"]}`}\r\n          >\r\n            Action\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{list}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default CustomerTable;\r\n","import styles from \"./Header.module.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className={styles.header}>\r\n      <h1 className={styles.title}>CRM</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import Button from \"./Button\";\r\nimport styles from \"./PageButtons.module.css\";\r\nfunction PageButtons(props) {\r\n  function nextPageHandler(event) {\r\n    event.preventDefault();\r\n    props.onNextPage();\r\n  }\r\n\r\n  function previousPageHandler(event) {\r\n    if (event !== undefined) {\r\n      event.preventDefault();\r\n    }\r\n    props.onPreviousPage();\r\n  }\r\n\r\n  function lastPageHandler(event) {\r\n    event.preventDefault();\r\n    props.onLastPage();\r\n  }\r\n\r\n  function firstPageHandler(event) {\r\n    event.preventDefault();\r\n\r\n    props.onFirstPage();\r\n  }\r\n\r\n  return (\r\n    <div className={styles[\"buttons-container\"]}>\r\n      <Button buttonText=\"&lt;&lt;\" clickHandler={firstPageHandler}></Button>\r\n      <Button buttonText=\"Previous\" clickHandler={previousPageHandler}></Button>\r\n      <p className={styles[\"page-number\"]}>{props.currentPageNumber}</p>\r\n      <Button\r\n        buttonText=\"Next\"\r\n        clickHandler={nextPageHandler}\r\n        additionalClass={props.disableNextButtons && \"disabled\"}\r\n      ></Button>\r\n      <Button\r\n        buttonText=\"&gt;&gt;\"\r\n        clickHandler={lastPageHandler}\r\n        additionalClass={props.disableNextButtons && \"disabled\"}\r\n      ></Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageButtons;\r\n","import { Fragment, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { createPortal } from \"react-dom\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\n\nimport AddCustomer from \"./components/Customer/AddCustomer\";\nimport CustomerTable from \"./components/Customer/CustomerTable\";\nimport Header from \"./components/UI/Header\";\nimport ErrorModal from \"./components/Modal/ErrorModal\";\nimport PageButtons from \"./components/UI/PageButtons\";\n\nfunction App() {\n  const customersOnPage = 10;\n  const [customerList, setCustomerList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [getError, setGetError] = useState(null);\n  const [deleteError, setDeleteError] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [displayList, setDisplayList] = useState([]);\n  const [lowerIndex, setLowerIndex] = useState(0);\n  const [currentPageNumber, setCurrentPageNumber] = useState(1);\n  const [numberOfPages, setNumberOfPages] = useState(1);\n\n  async function fetchCustomersHandler() {\n    setIsLoading(true);\n    setGetError(null);\n    try {\n      const response = await fetch(\"https://mymemetestpage.link/customers\");\n      if (!response.ok) {\n        throw new Error(\"Failed to load customers\");\n      }\n      const data = await response.json();\n      setCustomerList(data);\n    } catch (error) {\n      setGetError(error.message);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    fetchCustomersHandler();\n  }, []);\n\n  useEffect(() => {\n    switchLists();\n  }, [customerList, search]);\n\n  async function deleteCustomerHandler(deletedCustomer) {\n    setDeleteError(false);\n    try {\n      const response = await fetch(\"https://mymemetestpage.link/customers/\" + deletedCustomer.id, {\n        method: \"DELETE\",\n        body: JSON.stringify(deletedCustomer),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      if (!response.ok) {\n        throw new Error(\"Something went wrong.\");\n      }\n      deleteCustomerFromList(deletedCustomer);\n    } catch (error) {\n      openDeleteModal();\n    }\n  }\n  function openDeleteModal() {\n    setDeleteError(true);\n    disableBodyScroll(document);\n  }\n\n  function closeDeleteModal() {\n    setDeleteError(false);\n    enableBodyScroll(document);\n  }\n\n  function deleteCustomerFromList(deletedCustomer) {\n    setCustomerList((prevState) => {\n      const newArrayState = prevState.filter((customer) => {\n        return customer.id !== deletedCustomer.id;\n      });\n      return newArrayState;\n    });\n  }\n\n  function addCustomerHandler(customer) {\n    const newArrayState = [...customerList, customer];\n    setCustomerList(newArrayState);\n  }\n\n  function updateCustomerList(customer) {\n    setCustomerList((prevState) => {\n      let low = 0;\n      let high = prevState.length - 1;\n      while (low <= high) {\n        let mid = Math.floor((high + low) / 2);\n        if (prevState[mid].id === customer.id) {\n          const newCustomerArray = [...prevState];\n          newCustomerArray[mid] = customer;\n          return newCustomerArray;\n        } else if (prevState[mid].id < customer.id) {\n          low = mid + 1;\n        } else {\n          high = mid - 1;\n        }\n      }\n      return prevState;\n    });\n  }\n\n  function searchHandler(event) {\n    setSearch(event.target.value);\n    setLowerIndex(0);\n    setCurrentPageNumber(1);\n  }\n\n  function switchLists() {\n    let newDisplayList;\n    if (!search) {\n      newDisplayList = customerList;\n    } else {\n      newDisplayList = customerList.filter((customer) => {\n        return (\n          customer.firstName?.toLowerCase().includes(search) ||\n          customer.lastName?.toLowerCase().includes(search) ||\n          customer.email?.toLowerCase().includes(search) ||\n          customer.phone?.toLowerCase().includes(search)\n        );\n      });\n    }\n\n    setDisplayList(newDisplayList);\n    setNumberOfPages(calcNumberOfPages(newDisplayList, customersOnPage));\n  }\n  function calcNumberOfPages(list, customersOnPage) {\n    return Math.ceil(list.length / customersOnPage);\n  }\n  function nextPageHandler() {\n    if (currentPageNumber < numberOfPages) {\n      setCurrentPageNumber((prevState) => {\n        return prevState + 1;\n      });\n      setLowerIndex((prevState) => {\n        return prevState + customersOnPage;\n      });\n    }\n  }\n\n  function previousPageHandler() {\n    if (currentPageNumber > 1) {\n      setCurrentPageNumber((prevState) => {\n        return prevState - 1;\n      });\n      setLowerIndex((prevState) => {\n        return prevState - customersOnPage;\n      });\n    }\n  }\n\n  function lastPageHandler() {\n    setCurrentPageNumber(() => {\n      return numberOfPages;\n    });\n    setLowerIndex((numberOfPages - 1) * customersOnPage);\n  }\n\n  function firstPageHandler() {\n    setCurrentPageNumber(() => {\n      return 1;\n    });\n    setLowerIndex(0);\n  }\n\n  const customersNotFound = !isLoading && !getError && displayList.length === 0;\n  const disableNextButtons = currentPageNumber === numberOfPages;\n  const destination = document.getElementById(\"modal-destination\");\n  return (\n    <Fragment>\n      <Header></Header>\n      <Switch>\n        <Route path=\"/add-customer\">\n          <section>\n            <AddCustomer onAddCustomer={addCustomerHandler}></AddCustomer>\n          </section>\n        </Route>\n        <Route path=\"/\" exact>\n          <section>\n            {deleteError &&\n              createPortal(\n                <ErrorModal\n                  errorMessage=\"Something went wrong\"\n                  onClose={closeDeleteModal}\n                ></ErrorModal>,\n                destination\n              )}\n            <div className=\"top-container\">\n              <Link className=\"add-customer-link\" to=\"/add-customer\">\n                Add\n              </Link>\n              <input\n                className=\"search-input\"\n                value={search}\n                onChange={searchHandler}\n                placeholder=\"Search\"\n              ></input>\n            </div>\n            {/*message when data is loading */}\n            {isLoading && <p>Loading...</p>}\n            {/*message if there are no customers */}\n            {customersNotFound && <p>No customers found.</p>}\n            {/*error message if loading finished with error*/}\n            {!isLoading && displayList.length === 0 && getError && (\n              <p>{getError}</p>\n            )}\n            {!customersNotFound && (\n              <div className=\"table-container\">\n                <CustomerTable\n                  onUpdate={updateCustomerList}\n                  displayList={displayList}\n                  onDelete={deleteCustomerHandler}\n                  customersOnPage={customersOnPage}\n                  lowerIndex={lowerIndex}\n                  onLastPage={lastPageHandler}\n                ></CustomerTable>\n                <PageButtons\n                  onFirstPage={firstPageHandler}\n                  onLastPage={lastPageHandler}\n                  onNextPage={nextPageHandler}\n                  onPreviousPage={previousPageHandler}\n                  disableNextButtons={disableNextButtons}\n                  currentPageNumber={currentPageNumber}\n                ></PageButtons>\n              </div>\n            )}\n          </section>\n        </Route>\n        <Route>\n          <h2>Page not found.</h2>\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter,BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter><React.StrictMode>\n  \n    <App />\n    \n  </React.StrictMode></HashRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add-form\":\"AddCustomer_add-form__1tD8K\",\"form-group\":\"AddCustomer_form-group__2txkQ\",\"text\":\"AddCustomer_text__15WIJ\",\"add-input\":\"AddCustomer_add-input__3riDI\",\"input-required\":\"AddCustomer_input-required__3eRWM\",\"button-container\":\"AddCustomer_button-container__w5tIl\",\"back-link\":\"AddCustomer_back-link__3DctN\",\"success-message\":\"AddCustomer_success-message__1SN6R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table-container\":\"CustomerTable_table-container__2m6RP\",\"customer-table\":\"CustomerTable_customer-table__31cU1\",\"table-header\":\"CustomerTable_table-header__2E9pq\",\"table-header--number\":\"CustomerTable_table-header--number__3G3Rk\",\"table-header--action\":\"CustomerTable_table-header--action__2WxE2\",\"table-row\":\"CustomerTable_table-row__K7lTE\"};"],"sourceRoot":""}